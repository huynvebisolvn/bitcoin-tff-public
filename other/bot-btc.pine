//@version=5
strategy('[BOT-BTC]', initial_capital=10000, default_qty_value=100, default_qty_type=strategy.cash, currency='USD', pyramiding=0, overlay=true, commission_value=0.1)

//================BACK-TEST-TIME================
capital = 345
dca_usd = 100

yyyy = input.int(title="==Year for Backtest==", defval=2023)
fromDate = time >= timestamp(syminfo.timezone, yyyy, 01, 01, 0, 0)
toDate = time <= timestamp(syminfo.timezone, yyyy, 12, 31, 0, 0)
backtest_day = fromDate and toDate

//================ICHIMOKU================
ts_bars          = input(14, title="1- ICHI Tenkan-Sen Bars")
ks_bars          = input(77, title="2- ICHI Kijun-Sen Bars")
ssb_bars         = input(42, title="3- ICHI Senkou-Span B Bars")
cs_offset        = input(17, title="4- ICHI Chikou-Span Offset")
ss_offset        = input(33, title="5- ICHI Senkou-Span Offset")

middle(len) => math.avg(ta.lowest(len), ta.highest(len))
tenkan = middle(ts_bars)
kijun = middle(ks_bars)
senkouA = math.avg(tenkan, kijun)
senkouB = middle(ssb_bars)
ss_high = math.max(senkouA[ss_offset - 1], senkouB[ss_offset - 1])
ss_low = math.min(senkouA[ss_offset - 1], senkouB[ss_offset - 1])

tk_cross_bull = tenkan > kijun
tk_cross_bear = tenkan < kijun
cs_cross_bull = ta.mom(close, cs_offset - 1) > 0
cs_cross_bear = ta.mom(close, cs_offset - 1) < 0
price_above_kumo = close > ss_high
price_below_kumo = close < ss_low

//plot(tenkan, color=color.new(#0496ff, 0), title='Tenkan-Sen')
//plot(kijun, color=color.new(#991515, 0), title='Kijun-Sen')
//plot(close, offset=-cs_offset + 1, color=color.new(color.yellow, 0), title='Chikou-Span')
sa = plot(senkouA, offset=ss_offset - 1, color=color.new(color.green, 80), title='Senkou-Span A')
sb = plot(senkouB, offset=ss_offset - 1, color=color.new(color.red, 80), title='Senkou-Span B')
fill(sa, sb, color=senkouA > senkouB ? color.rgb(67, 160, 71, 90) : color.rgb(244, 67, 54, 90), title='Cloud color')

//================CMF================
cmf_Length       = input(10, title="6- CMF Length")

ad = close == high and close == low or high == low ? 0 : (2 * close - low - high) / (high - low) * volume
mf = math.sum(ad, cmf_Length) / math.sum(volume, cmf_Length)

//================TSI================
tsi_long_length  = input(33, title="7- TSI Long Length")
tsi_short_length = input(30, title="8- TSI Short Length")

double_smooth(open, tsi_long_length, tsi_short_length) =>
    fist_smooth = ta.ema(open, tsi_long_length)
    ta.ema(fist_smooth, tsi_short_length)
pc = ta.change(close)
double_smoothed_pc = double_smooth(pc, tsi_long_length, tsi_short_length)
double_smoothed_abs_pc = double_smooth(math.abs(pc), tsi_long_length, tsi_short_length)
tsi_value = 100 * (double_smoothed_pc / double_smoothed_abs_pc)

//================NULL-DAY================
null_day = input(8, title="9- Null Day")

//================TRAILING-STOP================
Atr(p) =>
    atr = 0.
    Tr = math.max(high - low, math.max(math.abs(high - close[1]), math.abs(low - close[1])))
    atr := nz(atr[1] + (Tr - atr[1]) / p, Tr)
    atr

multiplier = input.float(2.7, '10- SL Mutiplier', minval=1, step=0.1)
ATR_period = input.int(2, '11- ATR period', minval=1, step=1)

SL1 = multiplier * Atr(ATR_period)  // Stop Loss
Trail1 = 0.0
iff_1 = close > nz(Trail1[1], 0) ? close - SL1 : close + SL1
Trail1 := close < nz(Trail1[1], 0) and close[1] < nz(Trail1[1], 0) ? math.min(nz(Trail1[1], 0), close + SL1) : iff_1
Trail1_high = ta.highest(Trail1, 50)
plot(true ? Trail1_high : na, style=plot.style_linebr, color=color.new(color.yellow, 30), linewidth=1, title='trailing stop price')

//================COUNT DCA DAY================
dca_month_day = input.int(3, '12- DCA day',  minval=1, maxval=30)
new_day = ta.change(dayofweek)
is_dca_day = dca_month_day == dayofmonth and new_day and backtest_day
plotshape(is_dca_day, style=shape.circle, size=size.tiny, location=location.belowbar, color=color.new(color.red, 80), title='is dca day')
var count_dca = 0
if is_dca_day
    count_dca += 1

//^^^^^^^^^^^^^^^^SIGNAL^^^^^^^^^^^^^^^^
long = tk_cross_bull and cs_cross_bull and price_above_kumo and mf > 0.1 and tsi_value > 0

count_null = 0
for i = 1 to null_day
    if not long[i]
        count_null +=1

if long and count_null >= null_day and backtest_day
    count_null := 0
    strategy.entry('long', strategy.long, qty = (capital+count_dca*dca_usd + strategy.netprofit ) / close, comment="long")

short = tk_cross_bear and cs_cross_bear and price_below_kumo and mf < -0.1 and tsi_value < 0
if short or close <= Trail1_high
    strategy.close('long', comment="long_close")

plotshape(long, style=shape.triangleup, size=size.tiny, location=location.abovebar, color=color.new(color.green, 80), title='signal')

//^^^^^^^^^^^^^^^^REPORT^^^^^^^^^^^^^^^^
printTable(txt) => var table t = table.new(position.middle_right, 1, 1), table.cell(t, 0, 0, txt, bgcolor=color.new(color.yellow, 0))
printTable("CAPITAL: " + str.tostring(math.round(capital+count_dca*dca_usd, 2)) + "$\n" + "PROFIT: " + str.tostring(math.round(strategy.netprofit, 2)) + "$\n(" +str.tostring(math.round((strategy.netprofit)/(capital+count_dca*dca_usd), 2)*100) + "%)")



