//@version=5
strategy('[BTC/USDT]', initial_capital=1000, default_qty_value=100, default_qty_type=strategy.percent_of_equity, currency='USD', pyramiding=0, overlay=true, commission_value=0.1)

// ###############################################################################

//◀─── Ichimoku ───►
param_tenkan_sen         = input(14, title="1- Ichimoku Tenkan-Sen Bars")
param_kijun_sen          = input(77, title="2- Ichimoku Kijun-Sen Bars")
param_senkou_span_b      = input(42, title="3- Ichimoku Senkou-Span B Bars")
param_chikou_span        = input(17, title="4- Ichimoku Chikou-Span Offset")
param_senkou_span_offset = input(33, title="5- Ichimoku Senkou-Span Offset")

//◀─── function ───►
middle(len) => math.avg(ta.lowest(len), ta.highest(len))

tenkan = middle(param_tenkan_sen)
kijun = middle(param_kijun_sen)
senkou_span_a = math.avg(tenkan, kijun)
senkou_span_b = middle(param_senkou_span_b)
senkou_span_high = math.max(senkou_span_a[param_senkou_span_offset - 1], senkou_span_b[param_senkou_span_offset - 1])
senkou_span_low = math.min(senkou_span_a[param_senkou_span_offset - 1], senkou_span_b[param_senkou_span_offset - 1])

//◀─── Ichimoku Signal ───►
tenkan_cross_bull = tenkan > kijun
tenkan_cross_bear = tenkan < kijun
chikou_cross_bull = ta.mom(close, param_chikou_span - 1) > 0
chikou_cross_bear = ta.mom(close, param_chikou_span - 1) < 0
price_above_kumo = close > senkou_span_high
price_below_kumo = close < senkou_span_low

// ###############################################################################

//◀─── Chaikin Money Flow (CMF) ───►
param_cmf = input(10, title="6- CMF Length")
ad = close == high and close == low or high == low ? 0 : (2 * close - low - high) / (high - low) * volume

//◀─── Chaikin Money Flow Signal ───►
cmf = math.sum(ad, param_cmf) / math.sum(volume, param_cmf)

// ###############################################################################

//◀─── True Strength Index (TSI) ───►
param_tsi_long  = input(33, title="7- TSI Long Length")
param_tsi_short = input(30, title="8- TSI Short Length")

//◀─── function ───►
double_smooth(open, param_tsi_long, param_tsi_short) =>
    fist_smooth = ta.ema(open, param_tsi_long)
    ta.ema(fist_smooth, param_tsi_short)

pc = ta.change(close)
double_smoothed_pc = double_smooth(pc, param_tsi_long, param_tsi_short)
double_smoothed_abs_pc = double_smooth(math.abs(pc), param_tsi_long, param_tsi_short)

//◀─── True Strength Index Signal ───►
tsi_value = 100 * (double_smoothed_pc / double_smoothed_abs_pc)

// ###############################################################################

//◀─── Trailing Stop By Average True Range (ATR) ───►
param_atr_multiplier = input.float(2.7, '9- SL Mutiplier', minval=1, step=0.1)
param_atr_period = input.int(2, '10- ATR period', minval=1, step=1)
param_trail_length = input.int(50, '11- Trailing Length', minval=1, step=1)

//◀─── function ───►
atr_index(p) =>
    atr = 0.
    Tr = math.max(high - low, math.max(math.abs(high - close[1]), math.abs(low - close[1])))
    atr := nz(atr[1] + (Tr - atr[1]) / p, Tr)
    atr

stop_loss_1 = param_atr_multiplier * atr_index(param_atr_period)
trailing_stop_1 = 0.0
iff_1 = close > nz(trailing_stop_1[1], 0) ? close - stop_loss_1 : close + stop_loss_1
trailing_stop_1 := close < nz(trailing_stop_1[1], 0) and close[1] < nz(trailing_stop_1[1], 0) ? math.min(nz(trailing_stop_1[1], 0), close + stop_loss_1) : iff_1
trailing_stop_1_high = ta.highest(trailing_stop_1, param_trail_length)

// ###############################################################################
// ###############################################################################
//◀─── GENERAL SIGNAL ───►
long = tenkan_cross_bull and chikou_cross_bull and price_above_kumo and cmf > 0.1 and tsi_value > 0
short = tenkan_cross_bear and chikou_cross_bear and price_below_kumo and cmf < -0.1 and tsi_value < 0
if long and close >= trailing_stop_1_high
    strategy.entry('long', strategy.long, comment="long")
if short or close <= trailing_stop_1_high
    strategy.close('long', comment="long_close")

// ###############################################################################

//◀─── Plot trailing stop ───►
plot(true ? trailing_stop_1_high : na, style=plot.style_linebr, color=color.new(color.yellow, 30), linewidth=1, title='trailing stop price')

//◀─── Plot ichimoku ───►
sa = plot(senkou_span_a, offset=param_senkou_span_offset - 1, color=color.new(color.green, 80), title='Senkou-Span A')
sb = plot(senkou_span_b, offset=param_senkou_span_offset - 1, color=color.new(color.red, 80), title='Senkou-Span B')
fill(sa, sb, color=senkou_span_a > senkou_span_b ? color.rgb(67, 160, 71, 90) : color.rgb(244, 67, 54, 90), title='Cloud color')
// plot(tenkan, color=color.new(#0496ff, 0), title='Tenkan-Sen')
// plot(kijun, color=color.new(#991515, 0), title='Kijun-Sen')
// plot(close, offset=-param_chikou_span + 1, color=color.new(color.yellow, 0), title='Chikou-Span')

//◀─── Plot long signal ───►
plotshape(long, style=shape.triangleup, size=size.tiny, location=location.abovebar, color=color.new(color.green, 80), title='signal')

//◀─── Plot report ───►
printTable(txt) => var table t = table.new(position.top_right, 1, 1), table.cell(t, 0, 0, txt, bgcolor=color.new(color.yellow, 0))
printTable("PROFIT: " + str.tostring(math.round(strategy.netprofit_percent, 2)) + "%" + "\n" + "DRAWDOWN: " + str.tostring(math.round(strategy.max_drawdown_percent, 2)) + "%")

//◀─── Plot capital supplement ───►
is_dca_day = 3 == dayofmonth and ta.change(time("D"))
plotshape(is_dca_day, style=shape.circle, size=size.tiny, location=location.belowbar, color=color.new(color.red, 80), title='is dca day')


